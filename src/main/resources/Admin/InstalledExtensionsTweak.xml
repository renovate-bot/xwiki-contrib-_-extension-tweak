<?xml version="1.0" encoding="UTF-8"?>
<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.1">
  <web>Admin</web>
  <name>InstalledExtensionsTweak</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <creationDate>1425996514000</creationDate>
  <parent>Admin.WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <date>1426001844000</date>
  <contentUpdateDate>1426001099000</contentUpdateDate>
  <version>1.1</version>
  <title>Installed extensions tweaks</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>false</hidden>
  <content>{{warning}}
As a page playing with installed extension it could be dangerous.
{{/warning}}

{{velocity output="false"}}
#set($installedExtensions = $services.extension.installed)
#set($extensionId = "$!request.extensionId")
#set($wiki = $request.wiki)
#if (!$wiki)
  #set($wiki = $xcontext.database)
#end
#set($namespace = $request.namespace)
#if (!$namespace)
  #set($namespace = "wiki:$wiki")
#end
{{/velocity}}

= Make sure an extension and all its dependencies are installed on wikis and not on root namespace =

{{velocity}}
#macro(getRootExtensions $installedExtension $extensionNamespace $rootExtensions)
  ## Check the passed extension
  #if ($installedExtension.isInstalled($null))
    #set($void = $rootExtensions.put($installedExtension.id, $installedExtension))
    #set($extensionNamespace = $null)
  #end
  ##
  ## Check dependencies
  #foreach ($dependency in $installedExtension.dependencies)
    #set($dependencyExtension = $installedExtensions.getInstalledExtension($dependency.id, $extensionNamespace))
    #getRootExtensions($dependencyExtension, $extensionNamespace, $rootExtensions)
  #end
#end

#if ($request.eaction == 'movetowikis')
  #set($installedExtension = $installedExtensions.getInstalledExtension($extensionId, $namespace))
  #if ($installedExtension.id.id == $extensionId)
    #if ($installedExtension.isInstalled($null))
      #set($namespace = $null)
    #end
    #set($backwardDependencies = $installedExtensions.getBackwardDependencies($extensionId, $namespace))
    #if ($backwardDependencies.isEmpty())
      #set($rootExtensions = {})
      #getRootExtensions($installedExtension, $namespace, $rootExtensions)
      #if ($rootExtensions.isEmpty())
        {{warning}}Extension with id **$extensionId** available on wiki **$wiki** is not root extension and none of its dependencies are.{{/warning}}
      #else
        #if ($request.confirm == 'true')
          #set($allWikis = $services.wiki.getAllIds())
          #foreach ($rootExtension in $rootExtensions.values())
            $installedExtensions.repository.uninstallExtension($rootExtension, $null)
            #foreach ($wiki in $allWikis)
              #set($void = $installedExtensions.repository.installExtension($rootExtension, "wiki:$wiki", $rootExtension.isDependency($null)))
            #end
          #end
          {{success}}
            The following root extensions have been moved to each wiki:
            #foreach ($rootExtension in $rootExtensions.values())
              * $rootExtension#if ($rootExtension.type == 'jar') {{warning}}(require a restart to be fully applied){{/warning}}#end

            #end
          {{/success}}
        #else
          {{info}}
            The following root extensions will be moved to each wiki:
            #foreach ($rootExtension in $rootExtensions.values())
              * $rootExtension#if ($rootExtension.type == 'jar')({{warning}}require a restart to be fully applied{{/warning}})#end

            #end

            {{html}}
              &lt;form&gt;
                &lt;input type="hidden" name="confirm" value="true"/&gt;
                &lt;input type="hidden" name="eaction" value="movetowikis"/&gt;
                &lt;input type="hidden" name="extensionId" value="$extensionId"&gt;
                &lt;input type="hidden" name="wiki" value="$wiki"/&gt;
                &lt;input type="submit" value="Confirm"/&gt;
              &lt;/form&gt;
            {{/html}}
          {{/info}}
        #end
      #end
    #else
      {{error}}Extension with id **$extensionId** has backward dependencies ($backwardDependencies).{{/error}}
    #end
  #else
    {{error}}No extension with id **$extensionId** can be found on namespace $namespace.{{/error}} 
  #end
#end

{{html}}
 &lt;form&gt;
   &lt;input type="hidden" name="eaction" value="movetowikis"/&gt;&lt;/dd&gt;
   &lt;du&gt;
     &lt;dt&gt;Extension Id&lt;/dt&gt;
     &lt;dd&gt;&lt;input type="text" name="extensionId" value="$extensionId" size="100"&gt;&lt;/dd&gt;
     &lt;dt&gt;Wiki where it's installed (anything if installed on root)&lt;/dt&gt;
     &lt;dd&gt;&lt;input type="text" name="wiki" value="$wiki"/&gt;&lt;/dd&gt;
    &lt;/du&gt;
    &lt;input type="submit" value="Move"/&gt;
  &lt;/form&gt; 
{{/html}}
{{/velocity}}</content>
</xwikidoc>
